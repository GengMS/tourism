{"remainingRequest":"D:\\桌面\\tourism\\front-end\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\桌面\\tourism\\front-end\\front-end\\src\\layouts\\HeaderAsideLayout\\components\\ScrollBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\桌面\\tourism\\front-end\\front-end\\src\\layouts\\HeaderAsideLayout\\components\\ScrollBar.vue","mtime":1617256139677},{"path":"D:\\桌面\\tourism\\front-end\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\桌面\\tourism\\front-end\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\桌面\\tourism\\front-end\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\桌面\\tourism\\front-end\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst delta = 15;\n\nexport default {\n  name: 'ScrollBar',\n  data() {\n    return {\n      top: 0,\n    };\n  },\n  methods: {\n    handleScroll(e) {\n      const eventDelta = e.wheelDelta || -e.deltaY * 3;\n      const $container = this.$refs.scrollContainer;\n      const $containerHeight = parseInt($container.offsetHeight, 10);\n      const $wrapper = this.$refs.scrollWrapper;\n      const $wrapperHeight = parseInt($wrapper.offsetHeight, 10);\n      if (eventDelta > 0) {\n        this.top = Math.min(0, this.top + eventDelta);\n      } else if ($containerHeight - delta < $wrapperHeight) {\n        if (this.top < -(delta + ($wrapperHeight - $containerHeight))) {\n          this.top = this.top;\n        } else {\n          this.top = Math.max(\n            this.top + eventDelta,\n            $containerHeight - $wrapperHeight - delta,\n          );\n        }\n      } else {\n        this.top = 0;\n      }\n    },\n  },\n};\n",{"version":3,"sources":["ScrollBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScrollBar.vue","sourceRoot":"src/layouts/HeaderAsideLayout/components","sourcesContent":["<template>\n  <div\n    ref=\"scrollContainer\"\n    class=\"scroll-container\"\n    @wheel.prevent=\"handleScroll\">\n    <div\n      ref=\"scrollWrapper\"\n      :style=\"{top: top + 'px'}\"\n      class=\"scroll-wrapper\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script>\nconst delta = 15;\n\nexport default {\n  name: 'ScrollBar',\n  data() {\n    return {\n      top: 0,\n    };\n  },\n  methods: {\n    handleScroll(e) {\n      const eventDelta = e.wheelDelta || -e.deltaY * 3;\n      const $container = this.$refs.scrollContainer;\n      const $containerHeight = parseInt($container.offsetHeight, 10);\n      const $wrapper = this.$refs.scrollWrapper;\n      const $wrapperHeight = parseInt($wrapper.offsetHeight, 10);\n      if (eventDelta > 0) {\n        this.top = Math.min(0, this.top + eventDelta);\n      } else if ($containerHeight - delta < $wrapperHeight) {\n        if (this.top < -(delta + ($wrapperHeight - $containerHeight))) {\n          this.top = this.top;\n        } else {\n          this.top = Math.max(\n            this.top + eventDelta,\n            $containerHeight - $wrapperHeight - delta,\n          );\n        }\n      } else {\n        this.top = 0;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.scroll-container {\n  width: 100%;\n  height: 100%;\n  background-color: #00142a;\n  .scroll-wrapper {\n    position: absolute;\n    width: 100%;\n  }\n}\n</style>\n"]}]}